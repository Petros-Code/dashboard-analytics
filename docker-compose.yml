version: '3.3'

services:
  db:
    image: postgres:16
    container_name: dashboard_db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - appnet

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: dashboard_api
    depends_on:
      - db
    env_file:
      - .env
    environment:
      DATABASE_URL: ${DATABASE_URL}
      ENV: development
      TZ: Europe/Paris
    command: >
      bash -c "alembic upgrade head && uvicorn app.main:app --host 0.0.0.0 --port 8000 --workers 2"
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:8000/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - appnet

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: dashboard_frontend
    depends_on:
      - backend
    environment:
      VITE_API_URL: "/api"
    ports:
      - "8080:8080"
    networks:
      - appnet

  etl:
    build:
      context: ./etl
      dockerfile: Dockerfile
    container_name: dashboard_etl
    depends_on:
      - db
    env_file:
      - .env
    volumes:
      - ./etl/crontab:/etc/crontabs/root:ro
      - ./etl:/app
    command: ["sh", "-c", "crond -f -l 8"]
    restart: unless-stopped
    networks:
      - appnet

volumes:
  db-data:

networks:
  appnet:
    driver: bridge